{"version":3,"sources":["serviceWorker.js","Components/FileInput/index.js","Components/FilePicker/index.js","OutputFormatSelection.js","OSSelector.js","ControlledAccordions.js","Utils/AaxHashAlgorithm.js","ChecksumResolver.js","index.js"],"names":["Boolean","window","location","hostname","match","FileInput","props","_handleUpload","bind","evt","file","target","files","this","onChange","fileInput","value","style","accept","type","display","ref","ele","React","cloneElement","children","onClick","click","Component","FilePicker","_validate","onError","maxSize","extensions","uploadedFileExt","name","split","pop","toLowerCase","map","ext","includes","join","maxBytes","size","defaultProps","OutputFormatSelection","outputFormat","setOutputFormat","FormControl","component","FormLabel","RadioGroup","aria-label","event","FormControlLabel","control","Radio","label","OSSelector","operatingSystem","setOperatingSystem","ControlledAccordions","DarkerDisabledTextField","withStyles","root","marginRight","color","TextField","setExpanded","x","setState","expanded","handleChange","panel","isExpanded","getCommand","state","fileName","activationBytes","fileNameWithoutExtension","osMap","os","cmd","discriminator","filter","codec","format","bin","di","classes","className","Accordion","AccordionSummary","expandIcon","aria-controls","id","Typography","heading","secondaryHeading","AccordionDetails","paddingLeft","disabled","multiline","variant","margin","fullWidth","autoComplete","aria-readonly","fontSize","InputProps","readOnly","endAdornment","text","IconButton","theme","width","typography","pxToRem","flexBasis","flexShrink","palette","secondary","AaxHashAlgorithm","__fixed_key","hex","bytes","c","length","push","parseInt","substr","i","current","toString","data","a","source","Uint8Array","crypto","subtle","digest","buffer","Array","from","__hexToBytes","__HashData","concat","intermediate_key","intermediate_iv","slice","checksum","__bytesToHex","Instance","CalculateChecksum","ChecksumResolver","Copyright","align","Link","href","Date","getFullYear","setChecksum","isChecksumValid","RegExp","test","isInputInvalid","addNotification","success","store","message","insert","container","animationIn","animationOut","dismiss","duration","onScreen","requestActivationBytes","fetch","request","json","result","acceptFiles","acceptFile","slic","arrayBuffer","results","buf2hex","prototype","call","Container","maxWidth","CssBaseline","paper","Avatar","avatar","form","noValidate","noClick","onDrop","acceptedFiles","console","log","getRootProps","getInputProps","error","required","autoFocus","Button","Box","mt","marginTop","spacing","flexDirection","alignItems","backgroundColor","main","ReactGA","initialize","pageview","pathname","search","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.d9c7dd6c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","// external imports\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass FileInput extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this._handleUpload = this._handleUpload.bind(this)\r\n  }\r\n\r\n  _handleUpload(evt) {\r\n    const file = evt.target.files[0]\r\n    this.props.onChange(file)\r\n\r\n    // free up the fileInput again\r\n    this.fileInput.value = null\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={this.props.style}>\r\n        <input\r\n          accept={this.props.accept}\r\n          type=\"file\"\r\n          style={{ display: 'none' }}\r\n          onChange={this._handleUpload}\r\n          ref={ele => (this.fileInput = ele)}\r\n        />\r\n        {React.cloneElement(this.props.children, {\r\n          onClick: () => this.fileInput.click()\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nFileInput.propTypes = {\r\n  style: PropTypes.object,\r\n  accept: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default FileInput\r\n","// external imports\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// local imports\r\nimport FileInput from '../FileInput'\r\n\r\nclass FilePicker extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this._validate = this._validate.bind(this)\r\n  }\r\n\r\n  _validate(file) {\r\n    const { onError, onChange, maxSize, extensions } = this.props\r\n\r\n    // make sure a file was provided in the first place\r\n    if (!file) {\r\n      onError('Failed to upload a file.')\r\n      return\r\n    }\r\n\r\n    // if we care about file extensions\r\n    if (extensions) {\r\n      const uploadedFileExt = file.name\r\n        .split('.')\r\n        .pop()\r\n        .toLowerCase()\r\n      const isValidFileExt = extensions\r\n        .map(ext => ext.toLowerCase())\r\n        .includes(uploadedFileExt)\r\n\r\n      if (!isValidFileExt) {\r\n        onError(`Must upload a file of type: ${extensions.join(' or ')}`)\r\n        return\r\n      }\r\n    }\r\n\r\n    // convert maxSize from megabytes to bytes\r\n    const maxBytes = maxSize * 1000000\r\n\r\n    if (file.size > maxBytes) {\r\n      onError(`File size must be less than ${maxSize} MB.`)\r\n      return\r\n    }\r\n\r\n    // return native file object\r\n    onChange(file)\r\n  }\r\n\r\n  render() {\r\n    const { children, style } = this.props;\r\n    const accept = this.props.extensions.map(ext => `.${ext}`).join(',')\r\n\r\n    return (\r\n      <FileInput onChange={this._validate} style={style} accept={accept}>\r\n        {children}\r\n      </FileInput>\r\n    )\r\n  }\r\n}\r\n\r\nFilePicker.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  onError: PropTypes.func.isRequired,\r\n  // max file size in MB\r\n  maxSize: PropTypes.number,\r\n  // file extension\r\n  extensions: PropTypes.array,\r\n  // validate file contents\r\n  validateContent: PropTypes.func,\r\n  style: PropTypes.object\r\n}\r\n\r\nFilePicker.defaultProps = {\r\n  maxSize: 2\r\n}\r\n\r\nexport default FilePicker\r\n","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n\r\n\r\nexport default function OutputFormatSelection(props) {\r\n\r\n    const { outputFormat, setOutputFormat, style } = props;\r\n    \r\n    const handleChange = (event) => {\r\n       \r\n        setOutputFormat(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <FormControl component=\"fieldset\" style={style}>\r\n            <FormLabel component=\"legend\">Output Format</FormLabel>\r\n            <RadioGroup aria-label=\"format\" name=\"format\" value={outputFormat} onChange={handleChange}>\r\n                <FormControlLabel value=\"m4b\" control={<Radio />} label=\"AAC m4b\" />\r\n                <FormControlLabel value=\"flac\" control={<Radio />} label=\"FLAC hq\" />\r\n                <FormControlLabel value=\"mp3\" control={<Radio />} label=\"Lame mp3\" />\r\n            </RadioGroup>\r\n        </FormControl>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n\r\n\r\nexport default function OSSelector(props) {\r\n\r\n    const { operatingSystem, setOperatingSystem, style } = props;\r\n\r\n    const handleChange = (event) => setOperatingSystem(event.target.value);\r\n\r\n    return (\r\n        <FormControl component=\"fieldset\" style={style}>\r\n            <FormLabel component=\"legend\">Operating System</FormLabel>\r\n            <RadioGroup aria-label=\"format\" name=\"format\" value={operatingSystem} onChange={handleChange}>\r\n                <FormControlLabel value=\"win\" control={<Radio />} label=\"Windows\" />\r\n                <FormControlLabel value=\"linux\" control={<Radio />} label=\"Linux\" />\r\n                <FormControlLabel value=\"osx\" control={<Radio />} label=\"Mac\" />\r\n            </RadioGroup>\r\n        </FormControl>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Accordion, AccordionDetails, AccordionSummary } from '@material-ui/core';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport FileCopyOutlined from '@material-ui/icons/FileCopyOutlined';\r\n\r\n// import {ExpandMoreIcon, FileCopyOutlined} from '@material-ui/icons';\r\n\r\nimport OutputFormatSelection from './OutputFormatSelection'\r\nimport OSSelector from './OSSelector'\r\n\r\n\r\nimport { Radio, RadioGroup } from '@material-ui/core';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nclass ControlledAccordions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            expanded: \"\",\r\n            outputFormat: \"m4b\",\r\n            operatingSystem: \"win\"\r\n        };\r\n    }\r\n    DarkerDisabledTextField = withStyles({\r\n        root: {\r\n            marginRight: 8,\r\n            \"& .MuiInputBase-root.Mui-disabled\": {\r\n                color: \"rgba(0, 0, 0, 0.6)\"\r\n            }\r\n        }\r\n    })(TextField);\r\n\r\n    setExpanded = x => this.setState({ expanded: x })\r\n    handleChange = (panel) => (event, isExpanded) => {\r\n        this.setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    getCommand = () => {\r\n        const { outputFormat, operatingSystem } = this.state;\r\n        let { fileName, activationBytes } = this.props;\r\n\r\n        activationBytes = activationBytes ?? \"00000000\";\r\n\r\n        // ffmpeg.exe -y -activation_bytes 9f786605 -i  '.\\INFINITUM - Die Ewigkeit der Sterne.AAX' -ss 5 -to 20 -c copy out-t01.m4a\r\n        // faster:\r\n        // ffmpeg.exe -y -activation_bytes 9f786605 -i  '.\\INFINITUM - Die Ewigkeit der Sterne.AAX' -map_metadata 0 -id3v2_version 3 -ss 5 -to 20 -vn out-t02.m4a\r\n        // ffmpeg.exe -y -activation_bytes 9f786605 -i  '.\\INFINITUM - Die Ewigkeit der Sterne.AAX' -map_metadata 0 -ss 5 -to 20 -vn out-t02.m4a\r\n\r\n        // -vn: As an output option, disables video recording i.e. automatic selection or mapping of any video stream. For full manual control see the -map option.\r\n        // \" works on ps and cmd as discriminator\r\n\r\n        const outputFormatCodecMaps = [\r\n            { format: \"m4b\", codec: \"copy\" },\r\n            { format: \"flac\", codec: \"flac\" },\r\n            { format: \"mp3\", codec: \"libmp3lame\" },\r\n        ];\r\n\r\n        const osToBinMaps = [\r\n            { os: \"win\", cmd: \"ffmpeg.exe\", discriminator: '\"' },\r\n            { os: \"linux\", cmd: \"./ffmpeg\", discriminator: '\\'' },\r\n            { os: \"osx\", cmd: \"./ffmpeg\", discriminator: '\\'' },\r\n        ];\r\n\r\n        let fileNameWithoutExtension = fileName.split('.')[0];\r\n        fileNameWithoutExtension = fileNameWithoutExtension == 'input' ? 'output' : fileNameWithoutExtension;\r\n\r\n        const osMap =  osToBinMaps.filter(x => x.os == operatingSystem)[0];\r\n\r\n        const codec = outputFormatCodecMaps.filter(x => x.format == outputFormat)[0].codec;\r\n        const bin = osMap.cmd;\r\n        const di = osMap.discriminator;\r\n        \r\n        return `${bin} -y`\r\n            + ` -activation_bytes ${activationBytes} -i  ${di}.\\\\${fileName}${di}`\r\n            + ` -map_metadata 0`\r\n            + ` -id3v2_version 3`\r\n            + ` -codec:a ${codec}`\r\n            + ` -vn ${di}${fileNameWithoutExtension}.${outputFormat}${di}`;\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { expanded, outputFormat, operatingSystem } = this.state;\r\n\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <Accordion expanded={expanded === 'panel2'} onChange={this.handleChange('panel2')}>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel2bh-content\"\r\n                        id=\"panel2bh-header\"\r\n                    >\r\n                        <Typography className={classes.heading}>Command</Typography>\r\n                        <Typography className={classes.secondaryHeading}>\r\n                            Generate ffmpeg command\r\n                </Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails style={{ display: 'block' }}>\r\n                        <OutputFormatSelection\r\n                            outputFormat={outputFormat}\r\n                            setOutputFormat={x => this.setState({ outputFormat: x })}\r\n                        />\r\n\r\n                        <OSSelector\r\n                            operatingSystem={operatingSystem}\r\n                            setOperatingSystem={x => this.setState({ operatingSystem: x })}\r\n                            style={{ paddingLeft: '20px' }}\r\n                        />\r\n\r\n                        <this.DarkerDisabledTextField\r\n                            value={this.getCommand()}\r\n                            disabled\r\n                            multiline\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            id=\"activationBytes\"\r\n                            label=\"cmd\"\r\n                            name=\"activationBytes\"\r\n                            autoComplete=\"activationBytes\"\r\n                            aria-readonly\r\n                            fontSize={5}\r\n\r\n                            InputProps={{\r\n                                readOnly: true,\r\n                                endAdornment: (\r\n                                    <CopyToClipboard text={this.getCommand()}>\r\n                                        <IconButton >\r\n                                            <FileCopyOutlined />\r\n                                        </IconButton>\r\n                                    </CopyToClipboard>\r\n                                )\r\n                            }}\r\n\r\n                        />\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n\r\n});\r\n\r\nexport default withStyles(useStyles)(ControlledAccordions);\r\n","export default class AaxHashAlgorithm {\r\n    static Instance = new AaxHashAlgorithm();\r\n \r\n    __fixed_key = [0x77, 0x21, 0x4d, 0x4b, 0x19, 0x6a, 0x87, 0xcd, 0x52, 0x00, 0x45, 0xfd, 0x20, 0xa5, 0x1d, 0x67];\r\n \r\n \r\n    // Convert a hex string to a byte array\r\n    __hexToBytes(hex) {\r\n        for (var bytes = [], c = 0; c < hex.length; c += 2)\r\n            bytes.push(parseInt(hex.substr(c, 2), 16));\r\n \r\n        return bytes;\r\n    }\r\n \r\n    // Convert a byte array to a hex string\r\n    __bytesToHex(bytes) {\r\n        for (var hex = [], i = 0; i < bytes.length; i++) {\r\n            var current = bytes[i] < 0 ? bytes[i] + 256 : bytes[i];\r\n            hex.push((current >>> 4).toString(16));\r\n            hex.push((current & 0xF).toString(16));\r\n        }\r\n        return hex.join(\"\");\r\n    }\r\n \r\n    async __HashData(data) {\r\n        let source = new Uint8Array(data);\r\n        let buffer = await crypto.subtle.digest('SHA-1', source);\r\n        return Array.from(new Uint8Array(buffer));\r\n    }\r\n \r\n    async CalculateChecksum(activationBytes) {\r\n        let data = this.__hexToBytes(activationBytes);\r\n \r\n        let intermediate_key = await this.__HashData(this.__fixed_key.concat(data));\r\n        let intermediate_iv = await this.__HashData(this.__fixed_key.concat(intermediate_key).concat(data));\r\n        let checksum = await this.__HashData(intermediate_key.slice(0, 16).concat(intermediate_iv.slice(0, 16)));\r\n \r\n        return this.__bytesToHex(checksum);\r\n    }\r\n \r\n    static async CalculateChecksum(activationBytes){\r\n        return AaxHashAlgorithm.Instance.CalculateChecksum(activationBytes);\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport Dropzone from 'react-dropzone'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FileCopyOutlined from '@material-ui/icons/FileCopyOutlined';\r\nimport PublishOutlined from '@material-ui/icons/PublishOutlined';\r\n\r\n// import { useFilePicker } from 'react-sage'\r\n// import { FilePicker } from 'react-file-picker'\r\n\r\nimport { FilePicker } from '../src/Components'\r\n\r\n\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\nimport ControlledAccordions from './ControlledAccordions'\r\n\r\nimport 'react-notifications-component/dist/theme.css'\r\n\r\nimport ReactNotification from 'react-notifications-component'\r\nimport { store } from 'react-notifications-component';\r\n// import 'animate.css/animate.compat.css'\r\n\r\nimport AaxHashAlgorithm from './Utils/AaxHashAlgorithm'\r\n\r\n\r\nconst useStyles = theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n\r\n    //Accordeon\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n});\r\n\r\nclass ChecksumResolver extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            checksum: \"\",\r\n            fileName: \"input.aax\"\r\n        }\r\n    }\r\n\r\n    DarkerDisabledTextField = withStyles({\r\n        root: {\r\n            marginRight: 8,\r\n            \"& .MuiInputBase-root.Mui-disabled\": {\r\n                color: \"rgba(0, 0, 0, 0.6)\"\r\n            }\r\n        }\r\n    })(TextField);\r\n\r\n    Copyright = (function () {\r\n        return (\r\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n                {'Copyright © '}\r\n                <Link color=\"inherit\" href=\"https://audible-tools.github.io/\">\r\n                    audible-tools\r\n            </Link>{' '}\r\n                {new Date().getFullYear()}\r\n                {'.'}\r\n            </Typography>\r\n        );\r\n    })\r\n\r\n    setChecksum = (value) => {\r\n        if (value.length > 40) {\r\n            return;\r\n        }\r\n        this.setState({ checksum: value })\r\n    }\r\n\r\n    isChecksumValid = () => {\r\n        const { checksum } = this.state;\r\n        const regex = RegExp('[a-f0-9]{40}');\r\n        const testResults = regex.test(checksum);\r\n\r\n        return testResults;\r\n    }\r\n\r\n    isInputInvalid = () => {\r\n        const { checksum } = this.state;\r\n        if (!checksum || checksum === '') {\r\n            return false;\r\n        }\r\n        return !this.isChecksumValid();\r\n    };\r\n\r\n    addNotification = function (text, success = true) {\r\n        store.addNotification({\r\n            message: text,\r\n            type: success ? \"success\" : \"danger\",\r\n            // type: \"danger\",\r\n            insert: \"bottom-left\",\r\n            container: \"top-full\",\r\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n            dismiss: {\r\n                duration: 3000,\r\n                onScreen: false\r\n            }\r\n        });\r\n    }\r\n\r\n    requestActivationBytes = async () => {\r\n        const { checksum } = this.state;\r\n        try {\r\n            let request = await fetch(\"https://aax.api.j-kit.me/api/v2/activation/\" + checksum);\r\n            let result = await request.json();\r\n            const { success, activationBytes } = result;\r\n\r\n            if (success !== true) {\r\n                this.setState({ activationBytes: 'UNKNOWN' });\r\n                this.addNotification(\"An error occured while resolving the activation bytes, please check your inputs\", false);\r\n                return;\r\n            }\r\n\r\n            if (success === true) {\r\n                const calculatedChecksum = await AaxHashAlgorithm.CalculateChecksum(activationBytes);\r\n                if (calculatedChecksum == checksum) {\r\n                    this.setState({ activationBytes: activationBytes });\r\n                    this.addNotification(\"Successfully resolved the activation bytes\");\r\n                    return;\r\n                }\r\n                \r\n                this.setState({ activationBytes: \"API ERROR\" });\r\n                this.addNotification(\"An unexpected error occured while resolving the activation bytes, please try again\", false);\r\n\r\n            }\r\n        } catch (error) {\r\n            this.setState({ activationBytes: error });\r\n            this.addNotification(\"An error occured while resolving the activation bytes, please check your inputs\", false);\r\n        }\r\n    }\r\n\r\n    buf2hex(buffer) { // buffer is an ArrayBuffer\r\n        return Array.prototype.map.call(new Uint8Array(buffer), x => ('00' + x.toString(16)).slice(-2)).join('');\r\n    }\r\n\r\n    acceptFiles = async files => {\r\n        const file = files[0];\r\n        await this.acceptFile(file);\r\n    }\r\n\r\n    acceptFile = async file => {\r\n        // if (!file.name.toLowerCase().endsWith(\".aax\")) {\r\n        //     alert('FileType not supported!');\r\n        //     return;\r\n        // }\r\n\r\n        this.setState({ fileName: file.name });\r\n        const slic = file.slice(653, 653 + 20);\r\n        const results = this.buf2hex(await slic.arrayBuffer());\r\n        this.setChecksum(results)\r\n        this.requestActivationBytes();\r\n\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { checksum, activationBytes, fileName } = this.state;\r\n\r\n        // const { files, onClick, errors, HiddenFileInput } = useFilePicker({\r\n        //     maxFileSize: 1000000,\r\n        //     maxImageWidth: 1000,\r\n        //     imageQuality: 0.92,\r\n        //     resizeImage: true\r\n        //   });\r\n\r\n        return (\r\n            <Container component=\"main\" maxWidth=\"md\">\r\n\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        AAX Checksum Resolver\r\n                    </Typography>\r\n\r\n                    <form className={classes.form} noValidate>\r\n                        <Dropzone\r\n                            noClick\r\n                            onDrop={acceptedFiles => {\r\n                                console.log(acceptedFiles);\r\n                                this.acceptFiles(acceptedFiles);\r\n                            }}>\r\n                            {({ getRootProps, getInputProps }) => (\r\n                                <section>\r\n                                    <div {...getRootProps()}>\r\n                                        <input {...getInputProps()} />\r\n                                        <TextField\r\n                                            error={this.isInputInvalid()}\r\n                                            variant=\"outlined\"\r\n                                            margin=\"normal\"\r\n                                            required\r\n                                            fullWidth\r\n                                            id=\"checksum\"\r\n                                            label=\"Checksum or Drag&Drop .aax file -\"\r\n                                            name=\"checksum\"\r\n                                            autoComplete=\"checksum\"\r\n                                            autoFocus\r\n                                            onChange={(x) => this.setChecksum(x.target.value)}\r\n                                            value={checksum}\r\n                                            InputProps={{\r\n                                                readOnly: false,\r\n                                                endAdornment: (\r\n                                                    <FilePicker\r\n                                                        extensions={['aax', 'AAX']}\r\n                                                        maxSize={99999}\r\n                                                        onChange={this.acceptFile}\r\n                                                    >\r\n                                                        <IconButton >\r\n                                                            <PublishOutlined />\r\n                                                        </IconButton>\r\n                                                    </FilePicker>\r\n                                                )\r\n                                            }}\r\n\r\n                                        />\r\n                                    </div>\r\n                                </section>\r\n                            )}\r\n                        </Dropzone>\r\n\r\n                        <Button\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            onClick={() => {\r\n                                this.requestActivationBytes();\r\n                            }}\r\n                            disabled={!this.isChecksumValid()}\r\n                        >\r\n                            Request Activation Bytes\r\n                        </Button>\r\n\r\n                        <this.DarkerDisabledTextField\r\n                            value={activationBytes}\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            id=\"activationBytes\"\r\n                            label={activationBytes ? '' : \"Activation Bytes\"}\r\n                            name=\"activationBytes\"\r\n                            autoComplete=\"activationBytes\"\r\n                            aria-readonly\r\n\r\n                            InputProps={{\r\n                                readOnly: true,\r\n                                endAdornment: (\r\n                                    <CopyToClipboard text={activationBytes}>\r\n                                        <IconButton >\r\n                                            <FileCopyOutlined />\r\n                                        </IconButton>\r\n                                    </CopyToClipboard>\r\n                                )\r\n                            }}\r\n\r\n                        />\r\n\r\n                    </form>\r\n                </div>\r\n                <ControlledAccordions\r\n                    fileName={fileName}\r\n                    activationBytes={activationBytes}\r\n                />\r\n                <Box mt={1}>\r\n                    <this.Copyright />\r\n                </Box>\r\n\r\n\r\n\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(ChecksumResolver);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ChecksumResolver from './ChecksumResolver';\r\nimport ReactNotification from 'react-notifications-component'\r\n\r\nimport ReactGA from 'react-ga';\r\nReactGA.initialize('UA-174657678-1');\r\nReactGA.pageview(window.location.pathname + window.location.search);\r\n\r\nReactDOM.render(\r\n  <div>\r\n    <div style={{display:'flex'}}>\r\n    <ReactNotification />\r\n\r\n    </div>\r\n\r\n    <ChecksumResolver />\r\n  </div>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}