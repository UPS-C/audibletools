{"version":3,"sources":["serviceWorker.js","Components/FileInput/index.js","Components/FilePicker/index.js","OutputFormatSelection.js","OSSelector.js","OnlineConverter.jsx","ControlledAccordions.js","Utils/AaxHashAlgorithm.js","ChecksumResolver.js","index.js"],"names":["Boolean","window","location","hostname","match","FileInput","props","_handleUpload","bind","evt","file","target","files","this","onChange","fileInput","value","style","accept","type","display","ref","ele","React","cloneElement","children","onClick","click","Component","FilePicker","_validate","onError","maxSize","extensions","uploadedFileExt","name","split","pop","toLowerCase","map","ext","includes","join","maxBytes","size","defaultProps","OutputFormatSelection","outputFormat","setOutputFormat","FormControl","component","FormLabel","RadioGroup","aria-label","event","FormControlLabel","control","Radio","label","OSSelector","operatingSystem","setOperatingSystem","downloadFile","data","outputFileName","a","document","createElement","body","appendChild","blob","Blob","buffer","url","URL","createObjectURL","href","download","revokeObjectURL","getCommandAsList","activationBytes","codec","format","filter","x","doTranscode","setMessage","ffmpeg","createFFmpeg","log","progress","ratio","toFixed","command","load","fetchFile","FS","run","OnlineConverter","useState","message","downloadDisabled","Button","fileNameWithoutExtension","slice","variant","color","disabled","Typography","ControlledAccordions","DarkerDisabledTextField","withStyles","root","marginRight","TextField","setExpanded","setState","expanded","handleChange","panel","isExpanded","getCommand","state","fileName","osMap","os","cmd","discriminator","separator","bin","di","sep","classes","className","Accordion","AccordionSummary","expandIcon","aria-controls","id","heading","secondaryHeading","AccordionDetails","paddingLeft","multiline","margin","fullWidth","autoComplete","aria-readonly","fontSize","InputProps","readOnly","endAdornment","text","IconButton","theme","width","typography","pxToRem","flexBasis","flexShrink","palette","secondary","AaxHashAlgorithm","__fixed_key","hex","bytes","c","length","push","parseInt","substr","i","current","toString","source","Uint8Array","crypto","subtle","digest","Array","from","__hexToBytes","__HashData","concat","intermediate_key","intermediate_iv","checksum","__bytesToHex","Instance","CalculateChecksum","ChecksumResolver","Copyright","align","Link","Date","getFullYear","setChecksum","isChecksumValid","RegExp","test","isInputInvalid","addNotification","success","store","insert","container","animationIn","animationOut","dismiss","duration","onScreen","requestActivationBytes","checksumX","history","pushState","executeRecaptcha","googleReCaptchaProps","console","Promise","r","setTimeout","token","fetch","process","headers","Headers","request","json","result","acceptFiles","acceptFile","slic","arrayBuffer","results","buf2hex","pathname","checksumMatch","prototype","call","Container","maxWidth","CssBaseline","paper","Avatar","avatar","form","noValidate","noClick","onDrop","acceptedFiles","getRootProps","getInputProps","error","required","autoFocus","Box","mt","withGoogleReCaptcha","marginTop","spacing","flexDirection","alignItems","backgroundColor","main","timeout","WakeUp","ReactGA","initialize","pageview","search","ReactDOM","render","reCaptchaKey","repo","colorOctocat","isPride","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.bcc9e551.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","// external imports\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass FileInput extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this._handleUpload = this._handleUpload.bind(this)\r\n  }\r\n\r\n  _handleUpload(evt) {\r\n    const file = evt.target.files[0]\r\n    this.props.onChange(file)\r\n\r\n    // free up the fileInput again\r\n    this.fileInput.value = null\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={this.props.style}>\r\n        <input\r\n          accept={this.props.accept}\r\n          type=\"file\"\r\n          style={{ display: 'none' }}\r\n          onChange={this._handleUpload}\r\n          ref={ele => (this.fileInput = ele)}\r\n        />\r\n        {React.cloneElement(this.props.children, {\r\n          onClick: () => this.fileInput.click()\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nFileInput.propTypes = {\r\n  style: PropTypes.object,\r\n  accept: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default FileInput\r\n","// external imports\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// local imports\r\nimport FileInput from '../FileInput'\r\n\r\nclass FilePicker extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this._validate = this._validate.bind(this)\r\n  }\r\n\r\n  _validate(file) {\r\n    const { onError, onChange, maxSize, extensions } = this.props\r\n\r\n    // make sure a file was provided in the first place\r\n    if (!file) {\r\n      onError('Failed to upload a file.')\r\n      return\r\n    }\r\n\r\n    // if we care about file extensions\r\n    if (extensions) {\r\n      const uploadedFileExt = file.name\r\n        .split('.')\r\n        .pop()\r\n        .toLowerCase()\r\n      const isValidFileExt = extensions\r\n        .map(ext => ext.toLowerCase())\r\n        .includes(uploadedFileExt)\r\n\r\n      if (!isValidFileExt) {\r\n        onError(`Must upload a file of type: ${extensions.join(' or ')}`)\r\n        return\r\n      }\r\n    }\r\n\r\n    // convert maxSize from megabytes to bytes\r\n    const maxBytes = maxSize * 1000000\r\n\r\n    if (file.size > maxBytes) {\r\n      onError(`File size must be less than ${maxSize} MB.`)\r\n      return\r\n    }\r\n\r\n    // return native file object\r\n    onChange(file)\r\n  }\r\n\r\n  render() {\r\n    const { children, style } = this.props;\r\n    const accept = this.props.extensions.map(ext => `.${ext}`).join(',')\r\n\r\n    return (\r\n      <FileInput onChange={this._validate} style={style} accept={accept}>\r\n        {children}\r\n      </FileInput>\r\n    )\r\n  }\r\n}\r\n\r\nFilePicker.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  onError: PropTypes.func.isRequired,\r\n  // max file size in MB\r\n  maxSize: PropTypes.number,\r\n  // file extension\r\n  extensions: PropTypes.array,\r\n  // validate file contents\r\n  validateContent: PropTypes.func,\r\n  style: PropTypes.object\r\n}\r\n\r\nFilePicker.defaultProps = {\r\n  maxSize: 2\r\n}\r\n\r\nexport default FilePicker\r\n","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n\r\n\r\nexport default function OutputFormatSelection(props) {\r\n\r\n    const { outputFormat, setOutputFormat, style } = props;\r\n    \r\n    const handleChange = (event) => {\r\n       \r\n        setOutputFormat(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <FormControl component=\"fieldset\" style={style}>\r\n            <FormLabel component=\"legend\">Output Format</FormLabel>\r\n            <RadioGroup aria-label=\"format\" name=\"format\" value={outputFormat} onChange={handleChange}>\r\n                <FormControlLabel value=\"m4b\" control={<Radio />} label=\"AAC m4b\" />\r\n                <FormControlLabel value=\"flac\" control={<Radio />} label=\"FLAC hq\" />\r\n                <FormControlLabel value=\"mp3\" control={<Radio />} label=\"Lame mp3\" />\r\n            </RadioGroup>\r\n        </FormControl>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n\r\n\r\nexport default function OSSelector(props) {\r\n\r\n    const { operatingSystem, setOperatingSystem, style } = props;\r\n\r\n    const handleChange = (event) => setOperatingSystem(event.target.value);\r\n\r\n    return (\r\n        <FormControl component=\"fieldset\" style={style}>\r\n            <FormLabel component=\"legend\">Operating System</FormLabel>\r\n            <RadioGroup aria-label=\"format\" name=\"format\" value={operatingSystem} onChange={handleChange}>\r\n                <FormControlLabel value=\"win\" control={<Radio />} label=\"Windows\" />\r\n                <FormControlLabel value=\"linux\" control={<Radio />} label=\"Linux\" />\r\n                <FormControlLabel value=\"osx\" control={<Radio />} label=\"Mac\" />\r\n            </RadioGroup>\r\n        </FormControl>\r\n    );\r\n}\r\n","import React, {useState} from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { createFFmpeg, fetchFile } from '@ffmpeg/ffmpeg';\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst downloadFile= (data, outputFileName, outputFormat) => {\r\n    let a = document.createElement(\"a\");\r\n    document.body.appendChild(a);\r\n    const blob = new Blob([data.buffer], { type: 'audio/'+outputFormat});\r\n    const url = window.URL.createObjectURL(blob);\r\n    a.href = url;\r\n    a.download = outputFileName;\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n}\r\nconst getCommandAsList = (file, outputFileName, outputFormat, activationBytes) =>{\r\n    const outputFormatCodecMaps = [\r\n        { format: \"m4b\", codec: [\"-c\",\"copy\"] },\r\n        { format: \"flac\", codec: [\"-c:a\",\"flac\"] },\r\n        { format: \"mp3\", codec: [\"-c:a\",\"libmp3lame\"] },\r\n    ];\r\n    const codec = outputFormatCodecMaps.filter(x => x.format === outputFormat)[0].codec;\r\n    const filename = file.name;\r\n    return [`-y`,\r\n        '-activation_bytes', activationBytes,\r\n        '-i', filename,\r\n        ...codec,\r\n        outputFileName\r\n    ];\r\n}\r\nconst doTranscode = async (file, outputFileName, outputFormat, activationBytes, setMessage) => {\r\n    const ffmpeg = createFFmpeg({\r\n        log: true,\r\n        progress: ({ ratio }) => {\r\n            setMessage(`Complete: ${(ratio * 100.0).toFixed(2)}%`);\r\n        }\r\n    });\r\n    const command = getCommandAsList(file, outputFileName, outputFormat, activationBytes);\r\n    setMessage('Loading ffmpeg-core.js');\r\n    await ffmpeg.load();\r\n    setMessage('Start transcoding');\r\n    ffmpeg.FS('writeFile', file.name, await fetchFile(file));\r\n    await ffmpeg.run(...command);\r\n    setMessage('Complete transcoding');\r\n    const data = ffmpeg.FS('readFile', outputFileName);\r\n    downloadFile(data,outputFileName, outputFormat)\r\n};\r\nconst OnlineConverter = (props) => {\r\n    const {file, activationBytes, outputFormat} = props\r\n    const [message, setMessage] = useState('Click Start to transcode');\r\n\r\n    const downloadDisabled = !(file && activationBytes && outputFormat)\r\n\r\n    return(\r\n        <div>\r\n            <Button onClick={()=>{\r\n                let fileNameWithoutExtension = file.name.split('.').slice(0, -1).join('.');\r\n                fileNameWithoutExtension = fileNameWithoutExtension === 'input' ? 'output' : fileNameWithoutExtension;\r\n                const outputFileName = `${fileNameWithoutExtension}.${outputFormat}`\r\n                return doTranscode(file,outputFileName,outputFormat,activationBytes,setMessage)\r\n            }} variant=\"contained\" color=\"primary\" disabled={downloadDisabled}>Convert in Browser</Button>\r\n            <Typography>{message}</Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OnlineConverter","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Accordion, AccordionDetails, AccordionSummary } from '@material-ui/core';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport FileCopyOutlined from '@material-ui/icons/FileCopyOutlined';\r\n\r\nimport OutputFormatSelection from './OutputFormatSelection'\r\nimport OSSelector from './OSSelector'\r\n\r\n\r\nimport OnlineConverter from \"./OnlineConverter\";\r\n\r\nclass ControlledAccordions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            expanded: \"\",\r\n            outputFormat: \"m4b\",\r\n            operatingSystem: \"win\"\r\n        };\r\n    }\r\n    DarkerDisabledTextField = withStyles({\r\n        root: {\r\n            marginRight: 8,\r\n            \"& .MuiInputBase-root.Mui-disabled\": {\r\n                color: \"rgba(0, 0, 0, 0.6)\"\r\n            }\r\n        }\r\n    })(TextField);\r\n\r\n    setExpanded = x => this.setState({ expanded: x })\r\n    handleChange = (panel) => (event, isExpanded) => {\r\n        this.setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    getCommand = () => {\r\n        const { outputFormat, operatingSystem } = this.state;\r\n        let { fileName, activationBytes } = this.props;\r\n\r\n        activationBytes = activationBytes ?? \"00000000\";\r\n\r\n        // ffmpeg.exe -y -activation_bytes 9f786605 -i  '.\\INFINITUM - Die Ewigkeit der Sterne.AAX' -ss 5 -to 20 -c copy out-t01.m4a\r\n        // faster:\r\n        // ffmpeg.exe -y -activation_bytes 9f786605 -i  '.\\INFINITUM - Die Ewigkeit der Sterne.AAX' -map_metadata 0 -id3v2_version 3 -ss 5 -to 20 -vn out-t02.m4a\r\n        // ffmpeg.exe -y -activation_bytes 9f786605 -i  '.\\INFINITUM - Die Ewigkeit der Sterne.AAX' -map_metadata 0 -ss 5 -to 20 -vn out-t02.m4a\r\n\r\n        // -vn: As an output option, disables video recording i.e. automatic selection or mapping of any video stream. For full manual control see the -map option.\r\n        // \" works on ps and cmd as discriminator\r\n\r\n        const outputFormatCodecMaps = [\r\n            { format: \"m4b\", codec: \"-codec copy\" },\r\n            { format: \"flac\", codec: \"-codec:a flac\" },\r\n            { format: \"mp3\", codec: \"-codec:a libmp3lame\" },\r\n        ];\r\n\r\n        const osToBinMaps = [\r\n            { os: \"win\", cmd: \"ffmpeg.exe\", discriminator: '\"', separator: '\\\\', },\r\n            { os: \"linux\", cmd: \"ffmpeg\", discriminator: '\\'', separator: '/', },\r\n            { os: \"osx\", cmd: \"ffmpeg\", discriminator: '\\'', separator: '/', },\r\n        ];\r\n\r\n        let fileNameWithoutExtension = fileName.split('.').slice(0, -1).join('.');\r\n        fileNameWithoutExtension = fileNameWithoutExtension == 'input' ? 'output' : fileNameWithoutExtension;\r\n\r\n        const osMap =  osToBinMaps.filter(x => x.os == operatingSystem)[0];\r\n\r\n        const codec = outputFormatCodecMaps.filter(x => x.format == outputFormat)[0].codec;\r\n        const bin = osMap.cmd;\r\n        const di = osMap.discriminator;\r\n        const sep = osMap.separator;\r\n        \r\n        return [\r\n            `${bin} -y`,\r\n            `-activation_bytes ${activationBytes}`,\r\n            `-i  ${di}.${sep}${fileName}${di}`,\r\n            codec,\r\n            `${di}${fileNameWithoutExtension}.${outputFormat}${di}`\r\n        ].join(\" \")\r\n    }\r\n\r\n    render() {\r\n        const { classes, file, activationBytes} = this.props;\r\n        const { expanded, outputFormat, operatingSystem } = this.state;\r\n        return (\r\n            <div className={classes.root}>\r\n                <Accordion expanded={expanded === 'panel2'} onChange={this.handleChange('panel2')}>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel2bh-content\"\r\n                        id=\"panel2bh-header\"\r\n                    >\r\n                        <Typography className={classes.heading}>Command and Convert</Typography>\r\n                        <Typography className={classes.secondaryHeading}>\r\n                            Generate ffmpeg command or convert in browser\r\n                        </Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails style={{ display: 'block' }}>\r\n                        <OutputFormatSelection\r\n                            outputFormat={outputFormat}\r\n                            setOutputFormat={x => this.setState({ outputFormat: x })}\r\n                        />\r\n\r\n                        <OSSelector\r\n                            operatingSystem={operatingSystem}\r\n                            setOperatingSystem={x => this.setState({ operatingSystem: x })}\r\n                            style={{ paddingLeft: '20px' }}\r\n                        />\r\n\r\n                        <this.DarkerDisabledTextField\r\n                            value={this.getCommand()}\r\n                            disabled\r\n                            multiline\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            id=\"activationBytes\"\r\n                            label=\"cmd\"\r\n                            name=\"activationBytes\"\r\n                            autoComplete=\"activationBytes\"\r\n                            aria-readonly\r\n                            fontSize={5}\r\n\r\n                            InputProps={{\r\n                                readOnly: true,\r\n                                endAdornment: (\r\n                                    <CopyToClipboard text={this.getCommand()}>\r\n                                        <IconButton >\r\n                                            <FileCopyOutlined />\r\n                                        </IconButton>\r\n                                    </CopyToClipboard>\r\n                                )\r\n                            }}\r\n\r\n                        />\r\n                        <OnlineConverter file={file}\r\n                                         activationBytes={activationBytes}\r\n                                         outputFormat = {outputFormat}/>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n\r\n});\r\n\r\nexport default withStyles(useStyles)(ControlledAccordions);\r\n","export default class AaxHashAlgorithm {\r\n    static Instance = new AaxHashAlgorithm();\r\n \r\n    __fixed_key = [0x77, 0x21, 0x4d, 0x4b, 0x19, 0x6a, 0x87, 0xcd, 0x52, 0x00, 0x45, 0xfd, 0x20, 0xa5, 0x1d, 0x67];\r\n \r\n \r\n    // Convert a hex string to a byte array\r\n    __hexToBytes(hex) {\r\n        for (var bytes = [], c = 0; c < hex.length; c += 2)\r\n            bytes.push(parseInt(hex.substr(c, 2), 16));\r\n \r\n        return bytes;\r\n    }\r\n \r\n    // Convert a byte array to a hex string\r\n    __bytesToHex(bytes) {\r\n        for (var hex = [], i = 0; i < bytes.length; i++) {\r\n            var current = bytes[i] < 0 ? bytes[i] + 256 : bytes[i];\r\n            hex.push((current >>> 4).toString(16));\r\n            hex.push((current & 0xF).toString(16));\r\n        }\r\n        return hex.join(\"\");\r\n    }\r\n \r\n    async __HashData(data) {\r\n        let source = new Uint8Array(data);\r\n        let buffer = await crypto.subtle.digest('SHA-1', source);\r\n        return Array.from(new Uint8Array(buffer));\r\n    }\r\n \r\n    async CalculateChecksum(activationBytes) {\r\n        let data = this.__hexToBytes(activationBytes);\r\n \r\n        let intermediate_key = await this.__HashData(this.__fixed_key.concat(data));\r\n        let intermediate_iv = await this.__HashData(this.__fixed_key.concat(intermediate_key).concat(data));\r\n        let checksum = await this.__HashData(intermediate_key.slice(0, 16).concat(intermediate_iv.slice(0, 16)));\r\n \r\n        return this.__bytesToHex(checksum);\r\n    }\r\n \r\n    static async CalculateChecksum(activationBytes){\r\n        return AaxHashAlgorithm.Instance.CalculateChecksum(activationBytes);\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Button from '@material-ui/core/Button'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nimport Link from '@material-ui/core/Link'\r\nimport Box from '@material-ui/core/Box'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Container from '@material-ui/core/Container'\r\n\r\nimport Dropzone from 'react-dropzone'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport FileCopyOutlined from '@material-ui/icons/FileCopyOutlined'\r\nimport PublishOutlined from '@material-ui/icons/PublishOutlined'\r\n\r\nimport { FilePicker } from '../src/Components'\r\n\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\n\r\nimport ControlledAccordions from './ControlledAccordions'\r\nimport OnlineConverter from './OnlineConverter'\r\nimport 'react-notifications-component/dist/theme.css'\r\n\r\nimport ReactNotification from 'react-notifications-component'\r\nimport { store } from 'react-notifications-component'\r\n\r\nimport AaxHashAlgorithm from './Utils/AaxHashAlgorithm'\r\n\r\nimport {\r\n  GoogleReCaptchaProvider,\r\n  withGoogleReCaptcha,\r\n} from 'react-google-recaptcha-v3'\r\n\r\n\r\nconst useStyles = (theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n\r\n  //Accordeon\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n})\r\n\r\nclass ChecksumResolver extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      checksum: '',\r\n      fileName: 'input.aax',\r\n      activationBytes: '',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let path = window.location.pathname;\r\n    let checksumMatch = window.location.pathname.match(/([a-fA-F0-9]{40})/)\r\n    if(!checksumMatch) return;\r\n    let checksum = checksumMatch[1];\r\n    // this.setState({});\r\n    this.setChecksum(checksum);\r\n    this.requestActivationBytes(checksum);\r\n    // let { id } = this.props.params\r\n    // // this.fetchData(id)\r\n    // console.log(id)\r\n    // debugger;\r\n  }\r\n\r\n  DarkerDisabledTextField = withStyles({\r\n    root: {\r\n      marginRight: 8,\r\n      '& .MuiInputBase-root.Mui-disabled': {\r\n        color: 'rgba(0, 0, 0, 0.6)',\r\n      },\r\n    },\r\n  })(TextField)\r\n\r\n  Copyright = function () {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © '}\r\n        <Link color=\"inherit\" href=\"https://audible-tools.github.io/\">\r\n          audible-tools\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'. V 0.3'}\r\n      </Typography>\r\n    )\r\n  }\r\n\r\n  setChecksum = (value) => {\r\n    if (value.length > 40) {\r\n      return\r\n    }\r\n    this.setState({ checksum: value })\r\n  }\r\n\r\n  isChecksumValid = () => {\r\n    const { checksum } = this.state\r\n    const regex = RegExp('[a-f0-9]{40}')\r\n    const testResults = regex.test(checksum)\r\n\r\n    return testResults\r\n  }\r\n\r\n  isInputInvalid = () => {\r\n    const { checksum } = this.state\r\n    if (!checksum || checksum === '') {\r\n      return false\r\n    }\r\n    return !this.isChecksumValid()\r\n  }\r\n\r\n  addNotification = function (text, success = true) {\r\n    store.addNotification({\r\n      message: text,\r\n      type: success ? 'success' : 'danger',\r\n      // type: \"danger\",\r\n      insert: 'bottom-left',\r\n      container: 'top-full',\r\n      animationIn: ['animate__animated', 'animate__fadeIn'],\r\n      animationOut: ['animate__animated', 'animate__fadeOut'],\r\n      dismiss: {\r\n        duration: 3000,\r\n        onScreen: false,\r\n      },\r\n    })\r\n  }\r\n\r\n  requestActivationBytes = async (checksumX) => {\r\n    const checksum = checksumX ? checksumX : this.state.checksum\r\n\r\n    window.history.pushState('page2', 'Title', '/' + checksum);\r\n   \r\n    let executeRecaptcha = this.props.googleReCaptchaProps.executeRecaptcha\r\n\r\n    while(!executeRecaptcha) {\r\n      console.log('Recaptcha has not been loaded')\r\n      executeRecaptcha = this.props.googleReCaptchaProps?.executeRecaptcha\r\n      await new Promise(r => setTimeout(r, 100));\r\n    }\r\n\r\n    const token = await executeRecaptcha('homepage')\r\n    console.log(`XToken: ${token}`)\r\n    try {\r\n      let request = await fetch(\r\n        `${process.env.REACT_APP_APISERVER}/api/v2/activation/${checksum}`,\r\n        {\r\n          headers: new Headers({ 'x-captcha-result': token }),\r\n        },\r\n      )\r\n      let result = await request.json()\r\n      const { success, activationBytes } = result\r\n\r\n      if (success !== true) {\r\n        this.setState({ activationBytes: 'UNKNOWN' })\r\n        this.addNotification(\r\n          'An error occured while resolving the activation bytes, please check your inputs',\r\n          false,\r\n        )\r\n        return\r\n      }\r\n\r\n      if (success === true) {\r\n        const calculatedChecksum = await AaxHashAlgorithm.CalculateChecksum(\r\n          activationBytes,\r\n        )\r\n        if (calculatedChecksum == checksum) {\r\n          this.setState({ activationBytes: activationBytes })\r\n          this.addNotification('Successfully resolved the activation bytes')\r\n          return\r\n        }\r\n\r\n        this.setState({ activationBytes: 'API ERROR' })\r\n        this.addNotification(\r\n          'An unexpected error occured while resolving the activation bytes, please try again',\r\n          false,\r\n        )\r\n      }\r\n    } catch (error) {\r\n      this.setState({ activationBytes: error })\r\n      this.addNotification(\r\n        'An error occured while resolving the activation bytes, please check your inputs',\r\n        false,\r\n      )\r\n    }\r\n  }\r\n\r\n  buf2hex(buffer) {\r\n    // buffer is an ArrayBuffer\r\n    return Array.prototype.map\r\n      .call(new Uint8Array(buffer), (x) => ('00' + x.toString(16)).slice(-2))\r\n      .join('')\r\n  }\r\n\r\n  acceptFiles = async (files) => {\r\n    const file = files[0]\r\n    await this.acceptFile(file)\r\n  }\r\n\r\n  acceptFile = async (file) => {\r\n    // if (!file.name.toLowerCase().endsWith(\".aax\")) {\r\n    //     alert('FileType not supported!');\r\n    //     return;\r\n    // }\r\n\r\n    this.setState({ fileName: file.name, file: file })\r\n    const slic = file.slice(653, 653 + 20)\r\n    const results = this.buf2hex(await slic.arrayBuffer())\r\n    this.setChecksum(results)\r\n    this.requestActivationBytes()\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props\r\n    const { checksum, activationBytes, fileName, file } = this.state\r\n    // const id = this.props.match.params.id;\r\n    // let { id } = useParams();\r\n    // console.log(\"IDDDDDD\"+ id);\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"md\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            AAX Checksum Resolver\r\n          </Typography>\r\n\r\n          <form className={classes.form} noValidate>\r\n            <Dropzone\r\n              noClick\r\n              onDrop={(acceptedFiles) => {\r\n                console.log(acceptedFiles)\r\n                this.acceptFiles(acceptedFiles)\r\n              }}\r\n            >\r\n              {({ getRootProps, getInputProps }) => (\r\n                <section>\r\n                  <div {...getRootProps()}>\r\n                    <input {...getInputProps()} />\r\n                    <TextField\r\n                      error={this.isInputInvalid()}\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"checksum\"\r\n                      label=\"Checksum or Drag&Drop .aax file -\"\r\n                      name=\"checksum\"\r\n                      autoComplete=\"checksum\"\r\n                      autoFocus\r\n                      onChange={(x) => this.setChecksum(x.target.value)}\r\n                      onError={() => {}}\r\n                      value={checksum}\r\n                      InputProps={{\r\n                        readOnly: false,\r\n                        endAdornment: (\r\n                          <FilePicker\r\n                            extensions={['aax', 'AAX']}\r\n                            maxSize={99999}\r\n                            onChange={this.acceptFile}\r\n                            onError={() => {}}\r\n                          >\r\n                            <IconButton>\r\n                              <PublishOutlined />\r\n                            </IconButton>\r\n                          </FilePicker>\r\n                        ),\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </section>\r\n              )}\r\n            </Dropzone>\r\n\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              onClick={() => {\r\n                this.requestActivationBytes()\r\n              }}\r\n              disabled={!this.isChecksumValid()}\r\n            >\r\n              Request Activation Bytes\r\n            </Button>\r\n\r\n            <this.DarkerDisabledTextField\r\n              value={activationBytes}\r\n              disabled\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"activationBytes\"\r\n              label={activationBytes ? '' : 'Activation Bytes'}\r\n              name=\"activationBytes\"\r\n              autoComplete=\"activationBytes\"\r\n              aria-readonly\r\n              InputProps={{\r\n                readOnly: true,\r\n                endAdornment: (\r\n                  <CopyToClipboard text={activationBytes}>\r\n                    <IconButton>\r\n                      <FileCopyOutlined />\r\n                    </IconButton>\r\n                  </CopyToClipboard>\r\n                ),\r\n              }}\r\n            />\r\n          </form>\r\n        </div>\r\n        <ControlledAccordions\r\n          fileName={fileName}\r\n          activationBytes={activationBytes}\r\n          file={file}\r\n        />\r\n        <Box mt={1}>\r\n          <this.Copyright />\r\n        </Box>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withGoogleReCaptcha(withStyles(useStyles)(ChecksumResolver))\r\n\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport ChecksumResolver from './ChecksumResolver'\r\nimport ReactNotification from 'react-notifications-component'\r\nimport ForkMeOnGithub from 'fork-me-on-github'\r\n\r\nimport ReactGA from 'react-ga'\r\nimport {\r\n  GoogleReCaptchaProvider,\r\n  GoogleReCaptcha,\r\n} from 'react-google-recaptcha-v3'\r\n\r\nWakeUp()\r\n\r\nReactGA.initialize('UA-174657678-1')\r\nReactGA.pageview(window.location.pathname + window.location.search)\r\n\r\nReactDOM.render(\r\n  <div>\r\n    <GoogleReCaptchaProvider reCaptchaKey=\"6LeZhMMhAAAAAH2cwtbCRYys5WawPj4KS5pw-GNd\">\r\n      {/* <GoogleReCaptcha\r\n        onVerify={(a, b, c) => {\r\n          console.log(`Token: ${a}`);\r\n        }}\r\n      /> */}\r\n      <div style={{ display: 'flex' }}>\r\n        <ReactNotification />\r\n      </div>\r\n      <ForkMeOnGithub\r\n        repo=\"https://github.com/audible-tools/audible-tools.github.io\"\r\n        colorOctocat=\"black\"\r\n        isPride\r\n      />\r\n      <ChecksumResolver />\r\n    </GoogleReCaptchaProvider>\r\n  </div>,\r\n  document.getElementById('root'),\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n\r\nasync function WakeUp() {\r\n  while (true) {\r\n    let timeout = 1000 * 60; // 60 seconds\r\n    try {\r\n      await fetch('https://api.audible-converter.ml/api/v2/WakeUpNeo')\r\n      console.log('Woke up')\r\n    } catch (ex) {\r\n      console.log('Error occured: ' + ex)\r\n      timeout = 500; // 0.5 seconds\r\n    }\r\n    await new Promise((r) => setTimeout(r, timeout))\r\n  }\r\n}\r\n"],"sourceRoot":""}