{"version":3,"sources":["serviceWorker.js","Components/FileInput/index.js","Components/FilePicker/index.js","OutputFormatSelection.js","OSSelector.js","OnlineConverter.jsx","ControlledAccordions.js","Utils/AaxHashAlgorithm.js","ChecksumResolver.js","index.js"],"names":["Boolean","window","location","hostname","match","FileInput","props","_handleUpload","bind","evt","file","target","files","this","onChange","fileInput","value","style","accept","type","display","ref","ele","React","cloneElement","children","onClick","click","Component","FilePicker","_validate","onError","maxSize","extensions","uploadedFileExt","name","split","pop","toLowerCase","map","ext","includes","join","maxBytes","size","defaultProps","OutputFormatSelection","outputFormat","setOutputFormat","FormControl","component","FormLabel","RadioGroup","aria-label","event","FormControlLabel","control","Radio","label","OSSelector","operatingSystem","setOperatingSystem","downloadFile","data","outputFileName","a","document","createElement","body","appendChild","blob","Blob","buffer","url","URL","createObjectURL","href","download","revokeObjectURL","getCommandAsList","activationBytes","codec","format","filter","x","doTranscode","setMessage","ffmpeg","createFFmpeg","log","progress","ratio","toFixed","command","load","fetchFile","FS","run","OnlineConverter","useState","message","downloadDisabled","Button","fileNameWithoutExtension","slice","variant","color","disabled","Typography","ControlledAccordions","DarkerDisabledTextField","withStyles","root","marginRight","TextField","setExpanded","setState","expanded","handleChange","panel","isExpanded","getCommand","state","fileName","osMap","os","cmd","discriminator","bin","di","classes","className","Accordion","AccordionSummary","expandIcon","aria-controls","id","heading","secondaryHeading","AccordionDetails","paddingLeft","multiline","margin","fullWidth","autoComplete","aria-readonly","fontSize","InputProps","readOnly","endAdornment","text","IconButton","theme","width","typography","pxToRem","flexBasis","flexShrink","palette","secondary","AaxHashAlgorithm","__fixed_key","hex","bytes","c","length","push","parseInt","substr","i","current","toString","source","Uint8Array","crypto","subtle","digest","Array","from","__hexToBytes","__HashData","concat","intermediate_key","intermediate_iv","checksum","__bytesToHex","Instance","CalculateChecksum","ChecksumResolver","Copyright","align","Link","Date","getFullYear","setChecksum","isChecksumValid","RegExp","test","isInputInvalid","addNotification","success","store","insert","container","animationIn","animationOut","dismiss","duration","onScreen","requestActivationBytes","fetch","request","json","result","acceptFiles","acceptFile","slic","arrayBuffer","results","buf2hex","prototype","call","Container","maxWidth","CssBaseline","paper","Avatar","avatar","form","noValidate","noClick","onDrop","acceptedFiles","console","getRootProps","getInputProps","error","required","autoFocus","Box","mt","marginTop","spacing","flexDirection","alignItems","backgroundColor","main","ReactGA","initialize","pageview","pathname","search","ReactDOM","render","repo","colorOctocat","isPride","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.3c25dbdb.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// external imports\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nclass FileInput extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this._handleUpload = this._handleUpload.bind(this)\n  }\n\n  _handleUpload(evt) {\n    const file = evt.target.files[0]\n    this.props.onChange(file)\n\n    // free up the fileInput again\n    this.fileInput.value = null\n  }\n\n  render() {\n    return (\n      <div style={this.props.style}>\n        <input\n          accept={this.props.accept}\n          type=\"file\"\n          style={{ display: 'none' }}\n          onChange={this._handleUpload}\n          ref={ele => (this.fileInput = ele)}\n        />\n        {React.cloneElement(this.props.children, {\n          onClick: () => this.fileInput.click()\n        })}\n      </div>\n    )\n  }\n}\n\nFileInput.propTypes = {\n  style: PropTypes.object,\n  accept: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  onChange: PropTypes.func.isRequired\n}\n\nexport default FileInput\n","// external imports\nimport React from 'react'\nimport PropTypes from 'prop-types'\n// local imports\nimport FileInput from '../FileInput'\n\nclass FilePicker extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this._validate = this._validate.bind(this)\n  }\n\n  _validate(file) {\n    const { onError, onChange, maxSize, extensions } = this.props\n\n    // make sure a file was provided in the first place\n    if (!file) {\n      onError('Failed to upload a file.')\n      return\n    }\n\n    // if we care about file extensions\n    if (extensions) {\n      const uploadedFileExt = file.name\n        .split('.')\n        .pop()\n        .toLowerCase()\n      const isValidFileExt = extensions\n        .map(ext => ext.toLowerCase())\n        .includes(uploadedFileExt)\n\n      if (!isValidFileExt) {\n        onError(`Must upload a file of type: ${extensions.join(' or ')}`)\n        return\n      }\n    }\n\n    // convert maxSize from megabytes to bytes\n    const maxBytes = maxSize * 1000000\n\n    if (file.size > maxBytes) {\n      onError(`File size must be less than ${maxSize} MB.`)\n      return\n    }\n\n    // return native file object\n    onChange(file)\n  }\n\n  render() {\n    const { children, style } = this.props;\n    const accept = this.props.extensions.map(ext => `.${ext}`).join(',')\n\n    return (\n      <FileInput onChange={this._validate} style={style} accept={accept}>\n        {children}\n      </FileInput>\n    )\n  }\n}\n\nFilePicker.propTypes = {\n  children: PropTypes.node.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onError: PropTypes.func.isRequired,\n  // max file size in MB\n  maxSize: PropTypes.number,\n  // file extension\n  extensions: PropTypes.array,\n  // validate file contents\n  validateContent: PropTypes.func,\n  style: PropTypes.object\n}\n\nFilePicker.defaultProps = {\n  maxSize: 2\n}\n\nexport default FilePicker\n","import React from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\n\n\nexport default function OutputFormatSelection(props) {\n\n    const { outputFormat, setOutputFormat, style } = props;\n    \n    const handleChange = (event) => {\n       \n        setOutputFormat(event.target.value);\n    };\n\n    return (\n        <FormControl component=\"fieldset\" style={style}>\n            <FormLabel component=\"legend\">Output Format</FormLabel>\n            <RadioGroup aria-label=\"format\" name=\"format\" value={outputFormat} onChange={handleChange}>\n                <FormControlLabel value=\"m4b\" control={<Radio />} label=\"AAC m4b\" />\n                <FormControlLabel value=\"flac\" control={<Radio />} label=\"FLAC hq\" />\n                <FormControlLabel value=\"mp3\" control={<Radio />} label=\"Lame mp3\" />\n            </RadioGroup>\n        </FormControl>\n    );\n}\n","import React from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\n\n\nexport default function OSSelector(props) {\n\n    const { operatingSystem, setOperatingSystem, style } = props;\n\n    const handleChange = (event) => setOperatingSystem(event.target.value);\n\n    return (\n        <FormControl component=\"fieldset\" style={style}>\n            <FormLabel component=\"legend\">Operating System</FormLabel>\n            <RadioGroup aria-label=\"format\" name=\"format\" value={operatingSystem} onChange={handleChange}>\n                <FormControlLabel value=\"win\" control={<Radio />} label=\"Windows\" />\n                <FormControlLabel value=\"linux\" control={<Radio />} label=\"Linux\" />\n                <FormControlLabel value=\"osx\" control={<Radio />} label=\"Mac\" />\n            </RadioGroup>\n        </FormControl>\n    );\n}\n","import React, {useState} from \"react\";\nimport Button from '@material-ui/core/Button';\nimport { createFFmpeg, fetchFile } from '@ffmpeg/ffmpeg';\nimport Typography from \"@material-ui/core/Typography\";\n\nconst downloadFile= (data, outputFileName, outputFormat) => {\n    let a = document.createElement(\"a\");\n    document.body.appendChild(a);\n    const blob = new Blob([data.buffer], { type: 'audio/'+outputFormat});\n    const url = window.URL.createObjectURL(blob);\n    a.href = url;\n    a.download = outputFileName;\n    a.click();\n    window.URL.revokeObjectURL(url);\n}\nconst getCommandAsList = (file, outputFileName, outputFormat, activationBytes) =>{\n    const outputFormatCodecMaps = [\n        { format: \"m4b\", codec: \"copy\" },\n        { format: \"flac\", codec: \"flac\" },\n        { format: \"mp3\", codec: \"libmp3lame\" },\n    ];\n    const codec = outputFormatCodecMaps.filter(x => x.format === outputFormat)[0].codec;\n    const filename = file.name;\n    return [`-y`,\n        '-activation_bytes', activationBytes,\n        '-i', filename,\n        '-c:a', codec,\n        '-vn', outputFileName\n    ];\n}\nconst doTranscode = async (file, outputFileName, outputFormat, activationBytes, setMessage) => {\n    const ffmpeg = createFFmpeg({\n        log: true,\n        progress: ({ ratio }) => {\n            setMessage(`Complete: ${(ratio * 100.0).toFixed(2)}%`);\n        }\n    });\n    const command = getCommandAsList(file, outputFileName, outputFormat, activationBytes);\n    setMessage('Loading ffmpeg-core.js');\n    await ffmpeg.load();\n    setMessage('Start transcoding');\n    ffmpeg.FS('writeFile', file.name, await fetchFile(file));\n    await ffmpeg.run(...command);\n    setMessage('Complete transcoding');\n    const data = ffmpeg.FS('readFile', outputFileName);\n    downloadFile(data,outputFileName, outputFormat)\n};\nconst OnlineConverter = (props) => {\n    const {file, activationBytes, outputFormat} = props\n    const [message, setMessage] = useState('Click Start to transcode');\n\n    const downloadDisabled = !(file && activationBytes && outputFormat)\n\n    return(\n        <div>\n            <Button onClick={()=>{\n                let fileNameWithoutExtension = file.name.split('.').slice(0, -1).join('.');\n                fileNameWithoutExtension = fileNameWithoutExtension === 'input' ? 'output' : fileNameWithoutExtension;\n                const outputFileName = `${fileNameWithoutExtension}.${outputFormat}`\n                return doTranscode(file,outputFileName,outputFormat,activationBytes,setMessage)\n            }} variant=\"contained\" color=\"primary\" disabled={downloadDisabled}>Convert in Browser</Button>\n            <Typography>{message}</Typography>\n        </div>\n    )\n}\n\nexport default OnlineConverter","import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nimport { Accordion, AccordionDetails, AccordionSummary } from '@material-ui/core';\n\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport FileCopyOutlined from '@material-ui/icons/FileCopyOutlined';\n\n// import {ExpandMoreIcon, FileCopyOutlined} from '@material-ui/icons';\n\nimport OutputFormatSelection from './OutputFormatSelection'\nimport OSSelector from './OSSelector'\n\n\nimport { Radio, RadioGroup } from '@material-ui/core';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport OnlineConverter from \"./OnlineConverter\";\n\nclass ControlledAccordions extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expanded: \"\",\n            outputFormat: \"m4b\",\n            operatingSystem: \"win\"\n        };\n    }\n    DarkerDisabledTextField = withStyles({\n        root: {\n            marginRight: 8,\n            \"& .MuiInputBase-root.Mui-disabled\": {\n                color: \"rgba(0, 0, 0, 0.6)\"\n            }\n        }\n    })(TextField);\n\n    setExpanded = x => this.setState({ expanded: x })\n    handleChange = (panel) => (event, isExpanded) => {\n        this.setExpanded(isExpanded ? panel : false);\n    };\n\n    getCommand = () => {\n        const { outputFormat, operatingSystem } = this.state;\n        let { fileName, activationBytes } = this.props;\n\n        activationBytes = activationBytes ?? \"00000000\";\n\n        // ffmpeg.exe -y -activation_bytes 9f786605 -i  '.\\INFINITUM - Die Ewigkeit der Sterne.AAX' -ss 5 -to 20 -c copy out-t01.m4a\n        // faster:\n        // ffmpeg.exe -y -activation_bytes 9f786605 -i  '.\\INFINITUM - Die Ewigkeit der Sterne.AAX' -map_metadata 0 -id3v2_version 3 -ss 5 -to 20 -vn out-t02.m4a\n        // ffmpeg.exe -y -activation_bytes 9f786605 -i  '.\\INFINITUM - Die Ewigkeit der Sterne.AAX' -map_metadata 0 -ss 5 -to 20 -vn out-t02.m4a\n\n        // -vn: As an output option, disables video recording i.e. automatic selection or mapping of any video stream. For full manual control see the -map option.\n        // \" works on ps and cmd as discriminator\n\n        const outputFormatCodecMaps = [\n            { format: \"m4b\", codec: \"copy\" },\n            { format: \"flac\", codec: \"flac\" },\n            { format: \"mp3\", codec: \"libmp3lame\" },\n        ];\n\n        const osToBinMaps = [\n            { os: \"win\", cmd: \"ffmpeg.exe\", discriminator: '\"' },\n            { os: \"linux\", cmd: \"./ffmpeg\", discriminator: '\\'' },\n            { os: \"osx\", cmd: \"./ffmpeg\", discriminator: '\\'' },\n        ];\n\n        let fileNameWithoutExtension = fileName.split('.').slice(0, -1).join('.');\n        fileNameWithoutExtension = fileNameWithoutExtension == 'input' ? 'output' : fileNameWithoutExtension;\n\n        const osMap =  osToBinMaps.filter(x => x.os == operatingSystem)[0];\n\n        const codec = outputFormatCodecMaps.filter(x => x.format == outputFormat)[0].codec;\n        const bin = osMap.cmd;\n        const di = osMap.discriminator;\n        \n        return `${bin} -y`\n            + ` -activation_bytes ${activationBytes} -i  ${di}.\\\\${fileName}${di}`\n            + ` -map_metadata 0`\n            + ` -id3v2_version 3`\n            + ` -codec:a ${codec}`\n            + ` -vn ${di}${fileNameWithoutExtension}.${outputFormat}${di}`;\n    }\n\n    render() {\n        const { classes, file, activationBytes} = this.props;\n        const { expanded, outputFormat, operatingSystem } = this.state;\n        return (\n            <div className={classes.root}>\n                <Accordion expanded={expanded === 'panel2'} onChange={this.handleChange('panel2')}>\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel2bh-content\"\n                        id=\"panel2bh-header\"\n                    >\n                        <Typography className={classes.heading}>Command and Convert</Typography>\n                        <Typography className={classes.secondaryHeading}>\n                            Generate ffmpeg command or convert in browser\n                        </Typography>\n                    </AccordionSummary>\n                    <AccordionDetails style={{ display: 'block' }}>\n                        <OutputFormatSelection\n                            outputFormat={outputFormat}\n                            setOutputFormat={x => this.setState({ outputFormat: x })}\n                        />\n\n                        <OSSelector\n                            operatingSystem={operatingSystem}\n                            setOperatingSystem={x => this.setState({ operatingSystem: x })}\n                            style={{ paddingLeft: '20px' }}\n                        />\n\n                        <this.DarkerDisabledTextField\n                            value={this.getCommand()}\n                            disabled\n                            multiline\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            id=\"activationBytes\"\n                            label=\"cmd\"\n                            name=\"activationBytes\"\n                            autoComplete=\"activationBytes\"\n                            aria-readonly\n                            fontSize={5}\n\n                            InputProps={{\n                                readOnly: true,\n                                endAdornment: (\n                                    <CopyToClipboard text={this.getCommand()}>\n                                        <IconButton >\n                                            <FileCopyOutlined />\n                                        </IconButton>\n                                    </CopyToClipboard>\n                                )\n                            }}\n\n                        />\n                        <OnlineConverter file={file}\n                                         activationBytes={activationBytes}\n                                         outputFormat = {outputFormat}/>\n                    </AccordionDetails>\n                </Accordion>\n            </div>\n        );\n    }\n}\n\nconst useStyles = theme => ({\n    root: {\n        width: '100%',\n\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n\n});\n\nexport default withStyles(useStyles)(ControlledAccordions);\n","export default class AaxHashAlgorithm {\n    static Instance = new AaxHashAlgorithm();\n \n    __fixed_key = [0x77, 0x21, 0x4d, 0x4b, 0x19, 0x6a, 0x87, 0xcd, 0x52, 0x00, 0x45, 0xfd, 0x20, 0xa5, 0x1d, 0x67];\n \n \n    // Convert a hex string to a byte array\n    __hexToBytes(hex) {\n        for (var bytes = [], c = 0; c < hex.length; c += 2)\n            bytes.push(parseInt(hex.substr(c, 2), 16));\n \n        return bytes;\n    }\n \n    // Convert a byte array to a hex string\n    __bytesToHex(bytes) {\n        for (var hex = [], i = 0; i < bytes.length; i++) {\n            var current = bytes[i] < 0 ? bytes[i] + 256 : bytes[i];\n            hex.push((current >>> 4).toString(16));\n            hex.push((current & 0xF).toString(16));\n        }\n        return hex.join(\"\");\n    }\n \n    async __HashData(data) {\n        let source = new Uint8Array(data);\n        let buffer = await crypto.subtle.digest('SHA-1', source);\n        return Array.from(new Uint8Array(buffer));\n    }\n \n    async CalculateChecksum(activationBytes) {\n        let data = this.__hexToBytes(activationBytes);\n \n        let intermediate_key = await this.__HashData(this.__fixed_key.concat(data));\n        let intermediate_iv = await this.__HashData(this.__fixed_key.concat(intermediate_key).concat(data));\n        let checksum = await this.__HashData(intermediate_key.slice(0, 16).concat(intermediate_iv.slice(0, 16)));\n \n        return this.__bytesToHex(checksum);\n    }\n \n    static async CalculateChecksum(activationBytes){\n        return AaxHashAlgorithm.Instance.CalculateChecksum(activationBytes);\n    }\n}","import React, { useState } from 'react';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\n\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nimport Dropzone from 'react-dropzone'\nimport IconButton from '@material-ui/core/IconButton';\nimport FileCopyOutlined from '@material-ui/icons/FileCopyOutlined';\nimport PublishOutlined from '@material-ui/icons/PublishOutlined';\n\n// import { useFilePicker } from 'react-sage'\n// import { FilePicker } from 'react-file-picker'\n\nimport { FilePicker } from '../src/Components'\n\n\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nimport ControlledAccordions from './ControlledAccordions'\nimport OnlineConverter from \"./OnlineConverter\";\nimport 'react-notifications-component/dist/theme.css'\n\nimport ReactNotification from 'react-notifications-component'\nimport { store } from 'react-notifications-component';\n// import 'animate.css/animate.compat.css'\n\nimport AaxHashAlgorithm from './Utils/AaxHashAlgorithm'\n\n\nconst useStyles = theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n\n    //Accordeon\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n});\n\nclass ChecksumResolver extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            checksum: \"\",\n            fileName: \"input.aax\"\n        }\n    }\n\n    DarkerDisabledTextField = withStyles({\n        root: {\n            marginRight: 8,\n            \"& .MuiInputBase-root.Mui-disabled\": {\n                color: \"rgba(0, 0, 0, 0.6)\"\n            }\n        }\n    })(TextField);\n\n    Copyright = (function () {\n        return (\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n                {'Copyright © '}\n                <Link color=\"inherit\" href=\"https://audible-tools.github.io/\">\n                    audible-tools\n            </Link>{' '}\n                {new Date().getFullYear()}\n                {'.'}\n            </Typography>\n        );\n    })\n\n    setChecksum = (value) => {\n        if (value.length > 40) {\n            return;\n        }\n        this.setState({ checksum: value })\n    }\n\n    isChecksumValid = () => {\n        const { checksum } = this.state;\n        const regex = RegExp('[a-f0-9]{40}');\n        const testResults = regex.test(checksum);\n\n        return testResults;\n    }\n\n    isInputInvalid = () => {\n        const { checksum } = this.state;\n        if (!checksum || checksum === '') {\n            return false;\n        }\n        return !this.isChecksumValid();\n    };\n\n    addNotification = function (text, success = true) {\n        store.addNotification({\n            message: text,\n            type: success ? \"success\" : \"danger\",\n            // type: \"danger\",\n            insert: \"bottom-left\",\n            container: \"top-full\",\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n            dismiss: {\n                duration: 3000,\n                onScreen: false\n            }\n        });\n    }\n\n    requestActivationBytes = async () => {\n        const { checksum } = this.state;\n        try {\n            let request = await fetch(\"https://aax.api.j-kit.me/api/v2/activation/\" + checksum);\n            let result = await request.json();\n            const { success, activationBytes } = result;\n\n            if (success !== true) {\n                this.setState({ activationBytes: 'UNKNOWN' });\n                this.addNotification(\"An error occured while resolving the activation bytes, please check your inputs\", false);\n                return;\n            }\n\n            if (success === true) {\n                const calculatedChecksum = await AaxHashAlgorithm.CalculateChecksum(activationBytes);\n                if (calculatedChecksum == checksum) {\n                    this.setState({ activationBytes: activationBytes });\n                    this.addNotification(\"Successfully resolved the activation bytes\");\n                    return;\n                }\n                \n                this.setState({ activationBytes: \"API ERROR\" });\n                this.addNotification(\"An unexpected error occured while resolving the activation bytes, please try again\", false);\n\n            }\n        } catch (error) {\n            this.setState({ activationBytes: error });\n            this.addNotification(\"An error occured while resolving the activation bytes, please check your inputs\", false);\n        }\n    }\n\n    buf2hex(buffer) { // buffer is an ArrayBuffer\n        return Array.prototype.map.call(new Uint8Array(buffer), x => ('00' + x.toString(16)).slice(-2)).join('');\n    }\n\n    acceptFiles = async files => {\n        const file = files[0];\n        await this.acceptFile(file);\n    }\n\n    acceptFile = async file => {\n        // if (!file.name.toLowerCase().endsWith(\".aax\")) {\n        //     alert('FileType not supported!');\n        //     return;\n        // }\n\n        this.setState({ fileName: file.name, file:file });\n        const slic = file.slice(653, 653 + 20);\n        const results = this.buf2hex(await slic.arrayBuffer());\n        this.setChecksum(results)\n        this.requestActivationBytes();\n\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { checksum, activationBytes, fileName, file } = this.state;\n\n        // const { files, onClick, errors, HiddenFileInput } = useFilePicker({\n        //     maxFileSize: 1000000,\n        //     maxImageWidth: 1000,\n        //     imageQuality: 0.92,\n        //     resizeImage: true\n        //   });\n\n        return (\n            <Container component=\"main\" maxWidth=\"md\">\n\n                <CssBaseline />\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        AAX Checksum Resolver\n                    </Typography>\n\n                    <form className={classes.form} noValidate>\n                        <Dropzone\n                            noClick\n                            onDrop={acceptedFiles => {\n                                console.log(acceptedFiles);\n                                this.acceptFiles(acceptedFiles);\n                            }}>\n                            {({ getRootProps, getInputProps }) => (\n                                <section>\n                                    <div {...getRootProps()}>\n                                        <input {...getInputProps()} />\n                                        <TextField\n                                            error={this.isInputInvalid()}\n                                            variant=\"outlined\"\n                                            margin=\"normal\"\n                                            required\n                                            fullWidth\n                                            id=\"checksum\"\n                                            label=\"Checksum or Drag&Drop .aax file -\"\n                                            name=\"checksum\"\n                                            autoComplete=\"checksum\"\n                                            autoFocus\n                                            onChange={(x) => this.setChecksum(x.target.value)}\n                                            value={checksum}\n                                            InputProps={{\n                                                readOnly: false,\n                                                endAdornment: (\n                                                    <FilePicker\n                                                        extensions={['aax', 'AAX']}\n                                                        maxSize={99999}\n                                                        onChange={this.acceptFile}\n                                                    >\n                                                        <IconButton >\n                                                            <PublishOutlined />\n                                                        </IconButton>\n                                                    </FilePicker>\n                                                )\n                                            }}\n\n                                        />\n                                    </div>\n                                </section>\n                            )}\n                        </Dropzone>\n\n                        <Button\n                            fullWidth\n                            variant=\"contained\"\n                            onClick={() => {\n                                this.requestActivationBytes();\n                            }}\n                            disabled={!this.isChecksumValid()}\n                        >\n                            Request Activation Bytes\n                        </Button>\n\n                        <this.DarkerDisabledTextField\n                            value={activationBytes}\n                            disabled\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            id=\"activationBytes\"\n                            label={activationBytes ? '' : \"Activation Bytes\"}\n                            name=\"activationBytes\"\n                            autoComplete=\"activationBytes\"\n                            aria-readonly\n\n                            InputProps={{\n                                readOnly: true,\n                                endAdornment: (\n                                    <CopyToClipboard text={activationBytes}>\n                                        <IconButton >\n                                            <FileCopyOutlined />\n                                        </IconButton>\n                                    </CopyToClipboard>\n                                )\n                            }}\n\n                        />\n\n                    </form>\n                </div>\n                <ControlledAccordions\n                    fileName={fileName}\n                    activationBytes={activationBytes}\n                    file ={file}\n                />\n                <Box mt={1}>\n                    <this.Copyright />\n                </Box>\n\n\n\n            </Container>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(ChecksumResolver);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport ChecksumResolver from './ChecksumResolver';\nimport ReactNotification from 'react-notifications-component'\nimport ForkMeOnGithub from 'fork-me-on-github';\n\n\nimport ReactGA from 'react-ga';\nReactGA.initialize('UA-174657678-1');\nReactGA.pageview(window.location.pathname + window.location.search);\n\nReactDOM.render(\n  <div>\n    <div style={{display:'flex'}}>\n    <ReactNotification />\n\n    </div>\n    <ForkMeOnGithub\n      repo=\"https://github.com/audible-tools/audible-tools.github.io\"\n      colorOctocat=\"black\"\n      isPride\n    />\n    <ChecksumResolver />\n  </div>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}